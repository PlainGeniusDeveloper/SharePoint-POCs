Based on the provided image and your requirement, we will modify the existing code to:

1. Fetch the Default JSON from the Style Library.


2. Compare and merge it with the product-specific JSON coming from the list.


3. Bind the merged result to your bind_banner_details.



Hereâ€™s the updated code:


---

Updated Code

function previewDataBind(listTitle, paramContentOffering, paramVersion) {
    var listName = listTitle;

    getListItems(listName, paramContentOffering, paramVersion, function (data) {
        if (publishListDetails.ProductDetails === listName || baseListDetails.ProductDetails === listName) {
            var items = data.d.results[0].JSON_x0020_Template;
            items = JSON.parse(items);

            // Fetch default JSON
            const defaultJsonUrl = "/sites/SiteName/Style Library/json/default.json";
            $.getJSON(defaultJsonUrl, function (defaultJson) {
                // Merge default JSON with the specific JSON
                const mergedItems = mergeJSON(defaultJson, items);

                // Bind the merged result
                bind_banner_details(mergedItems);
            }).fail(function (error) {
                console.error("Error fetching default JSON:", error);
            });

            return;
        } else if (publishListDetails.AreaOfSupport === listName || baseListDetails.AreaOfSupport === listName) {
            var items = data.d.results;
            if (items.length > 0) {
                const supportInfoHtml = contentTypeHandlers["SupportCards"](items);
                $("#divSupportSlider").append(supportInfoHtml);
            }
            return;
        }
    });

    // Recursive function to merge JSON objects
    function mergeJSON(defaultJson, specificJson) {
        for (const key in defaultJson) {
            if (!specificJson.hasOwnProperty(key)) {
                // Add missing keys from the default JSON
                specificJson[key] = defaultJson[key];
            } else if (typeof defaultJson[key] === "object" && !Array.isArray(defaultJson[key])) {
                // Recursively merge nested objects
                specificJson[key] = mergeJSON(defaultJson[key], specificJson[key]);
            }
        }
        return specificJson;
    }
}


---

Key Changes

1. Fetching Default JSON:

The default JSON is loaded using $.getJSON from the Style Library.



2. Merging JSONs:

A mergeJSON function is used to recursively add missing keys or nested objects from the default JSON into the product-specific JSON.



3. Binding Merged Result:

After merging, the combined JSON (mergedItems) is passed to the existing bind_banner_details function.





---

Example Flow

1. Default JSON (from Style Library):

{
    "Product": {
        "name": "Default Product",
        "price": "100",
        "brand": "Generic",
        "features": {
            "warranty": "1 year"
        }
    }
}


2. Product-Specific JSON (from List):

{
    "Product": {
        "name": "Nokia",
        "features": {
            "warranty": "2 years"
        }
    }
}


3. Merged Result:

{
    "Product": {
        "name": "Nokia",
        "price": "100",
        "brand": "Generic",
        "features": {
            "warranty": "2 years"
        }
    }
}




---

Testing

1. Verify that the default.json file is accessible under the Style Library path.


2. Ensure your list contains valid JSON in the JSON_x0020_Template field.


3. Check the console for any errors in fetching or merging the data.



Let me know if you need further assistance!

