Yes, data.isSoft is a property provided by CKEditor to differentiate between a "soft enter" (Shift+Enter, which inserts <br>) and a "hard enter" (Enter, which inserts <p> by default). You can leverage this property to detect and override the Enter key's behavior to mimic a soft enter.

Here’s how you can use data.isSoft in CKEditor:

Implementation

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CKEditor Custom Enter Key</title>
  <script src="https://cdn.ckeditor.com/4.20.0/standard/ckeditor.js"></script>
</head>
<body>
  <textarea id="editor1"></textarea>

  <script>
    CKEDITOR.replace('editor1', {
      on: {
        instanceReady: function (evt) {
          const editor = evt.editor;

          // Override key handling
          editor.on('key', function (event) {
            if (event.data.keyCode === 13 && !event.data.isSoft) {
              // Simulate Shift+Enter (soft enter behavior)
              editor.insertHtml('<br>'); // Insert a <br>
              event.cancel(); // Prevent the default behavior
            }
          });
        }
      }
    });
  </script>
</body>
</html>

Explanation

1. event.data.isSoft:

This property is true when the user presses Shift+Enter.

It is false when the user presses Enter without the Shift key.



2. Key Override:

When Enter is pressed (keyCode === 13) and data.isSoft is false, the Enter key behavior is overridden to insert a <br> (soft enter behavior).

The event.cancel() method prevents the default Enter behavior (which inserts a <p>).



3. Simulating Shift+Enter:

The editor.insertHtml('<br>') line mimics the behavior of Shift+Enter by directly inserting a line break.




Final Behavior

Enter Key: Acts like Shift+Enter, inserting a <br>.

Shift+Enter Key: Retains its default behavior, also inserting a <br>.


This approach is clean and utilizes CKEditor’s built-in isSoft property, ensuring that the editor behaves consistently.
