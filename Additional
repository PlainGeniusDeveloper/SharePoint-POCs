If the paste event is not triggering, it's likely due to how CKEditor is handling the clipboard events. Ensure you are attaching the event handler correctly. Here's the corrected and verified implementation:

Correct Implementation for the paste Event

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CKEditor Paste Event</title>
  <script src="https://cdn.ckeditor.com/4.20.0/standard/ckeditor.js"></script>
</head>
<body>
  <textarea id="editor1"></textarea>

  <script>
    CKEDITOR.replace('editor1', {
      on: {
        paste: function (evt) {
          console.log('Paste event triggered!'); // Check if the event triggers
          const pastedData = evt.data.dataValue; // Get the pasted content

          // Create a temporary DOM element to parse and sanitize the HTML
          const tempDiv = document.createElement('div');
          tempDiv.innerHTML = pastedData;

          // Remove all inline styles and classes
          const elements = tempDiv.querySelectorAll('*');
          elements.forEach(element => {
            element.removeAttribute('style');
            element.removeAttribute('class');
          });

          // Update the pasted content with sanitized HTML
          evt.data.dataValue = tempDiv.innerHTML;
        }
      }
    });
  </script>
</body>
</html>

Key Points to Check

1. Console Log:

Check for the Paste event triggered! log in the browser's developer console when you paste content.

If it doesn't appear, ensure CKEditor is properly initialized.



2. Browser Clipboard Permissions:

Some browsers might block clipboard access. Ensure you grant clipboard permissions.



3. Using Plugins:

If you're using plugins like pastefromword, ensure they don't interfere with the custom paste event.



4. External Clipboard Handling:

CKEditor may process clipboard data asynchronously, so ensure the paste event is correctly attached during initialization.




Debugging Steps

Verify CKEditor initialization: Ensure CKEDITOR.replace is called for the correct textarea element.

Check for errors: Look for JavaScript errors in the console that might prevent the paste event from firing.

Try a clean editor setup: Test with the simplest CKEditor configuration to isolate the issue.


Let me know if you continue to face issues, and we can debug further!

