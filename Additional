ClassicEditor
    .create(document.querySelector('#editor'), {
        link: {
            decorators: {
                isExternal: {
                    mode: 'automatic',
                    callback: url => /^(https?:)?\/\//.test(url),
                    attributes: {
                        target: '_blank',
                        rel: 'noopener noreferrer'
                    }
                }
            }
        }
    })
    .then(editor => {
        const MAX_CHAR_LIMIT = 50; // Set your character limit here

        editor.model.document.on('change:data', () => {
            editor.model.change(writer => {
                const selection = editor.model.document.selection;
                const selectedLinkElement = selection.getSelectedElement();

                if (selectedLinkElement && selectedLinkElement.is('element', 'link')) {
                    const currentText = selectedLinkElement.getChild(0)?.data || '';
                    if (currentText.length > MAX_CHAR_LIMIT) {
                        const truncatedText = currentText.substring(0, MAX_CHAR_LIMIT);
                        writer.setAttribute('linkHref', truncatedText, selectedLinkElement);
                    }
                }
            });
        });
    })
    .catch(error => {
        console.error('There was a problem initializing the editor:', error);
    });
