function deleteValueByPath(obj, path) {
    if (!obj || !path) return;

    // Convert bracket notation (e.g., tabsDetails[1].tabContent) to dot notation (tabsDetails.1.tabContent)
    const keys = path.replace(/(\d+)/g, ".$1").split(".");
    let current = obj;

    for (let i = 0; i < keys.length - 1; i++) {
        const key = keys[i];

        if (!(key in current)) {
            return; // Path does not exist, exit
        }

        current = current[key]; // Traverse deeper
    }

    // Delete the final key dynamically
    const lastKey = keys[keys.length - 1];
    if (lastKey in current) {
        delete current[lastKey];
        console.log(`Deleted: ${path}`);
    }
}

function processJsonTemplate(jsonTemplate, mapping) {
    for (const [jsonPath, config] of Object.entries(mapping)) {
        const elements = document.querySelectorAll(config.selector);

        elements.forEach((element) => {
            if (element.closest(".section-description")?.classList.contains("disable_effect")) {
                deleteValueByPath(jsonTemplate, jsonPath); // Use JSON path dynamically
            }
        });

        if (config.handler) {
            config.handler(jsonPath, config);
        }
    }
}
