Here's an implementation using jQuery for a multi-select dropdown with <optgroup>, including save and edit functionality.


---

Features:

1. Multi-select dropdown with <optgroup> to group regions and their countries.


2. Textbox for entering notes for selected countries.


3. Save and Edit functionality to persist and modify the selections and notes.




---

Example Code:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Multi-Select Dropdown with Optgroup</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        select {
            width: 300px;
            height: 150px;
            margin-bottom: 20px;
        }

        .note-container {
            margin-bottom: 20px;
        }

        .note-container label {
            display: block;
            margin-top: 10px;
        }

        .save-edit-buttons button {
            margin-right: 10px;
        }
    </style>
</head>
<body>
    <h2>Multi-Select Dropdown with Optgroup</h2>
    <form id="cascadingForm">
        <!-- Region and Country Dropdown -->
        <label for="regionDropdown">Select Regions and Countries</label>
        <select id="regionDropdown" multiple>
            <!-- Options with optgroup will be populated dynamically -->
        </select>

        <!-- Notes Section -->
        <div class="note-container" id="noteContainer">
            <!-- Notes for selected countries will appear here -->
        </div>

        <!-- Save and Edit Buttons -->
        <div class="save-edit-buttons">
            <button type="button" id="saveButton">Save</button>
            <button type="button" id="editButton" style="display: none;">Edit</button>
        </div>
    </form>

    <script>
        $(document).ready(function () {
            // Mock data for Regions and Countries
            const data = {
                regions: [
                    { id: 1, name: "North America" },
                    { id: 2, name: "Europe" },
                    { id: 3, name: "Asia" }
                ],
                countries: [
                    { id: 101, name: "USA", regionId: 1 },
                    { id: 102, name: "Canada", regionId: 1 },
                    { id: 201, name: "Germany", regionId: 2 },
                    { id: 202, name: "France", regionId: 2 },
                    { id: 301, name: "India", regionId: 3 },
                    { id: 302, name: "China", regionId: 3 }
                ]
            };

            const $regionDropdown = $("#regionDropdown");
            const $noteContainer = $("#noteContainer");
            let savedSelections = { selectedItems: [], notes: {} };

            // Populate the dropdown with optgroup
            function populateDropdown() {
                $regionDropdown.empty(); // Clear previous options

                data.regions.forEach(region => {
                    const $optgroup = $("<optgroup>")
                        .attr("label", region.name)
                        .attr("data-region-id", region.id);

                    // Add countries under the region
                    data.countries
                        .filter(country => country.regionId === region.id)
                        .forEach(country => {
                            const $option = $("<option>")
                                .val(country.id)
                                .text(country.name);
                            $optgroup.append($option);
                        });

                    $regionDropdown.append($optgroup);
                });
            }

            // Display notes section for selected countries
            function displayNotes() {
                $noteContainer.empty();

                $regionDropdown
                    .find("option:selected")
                    .each(function () {
                        const countryId = $(this).val();
                        const countryName = $(this).text();

                        const $noteRow = $("<div>").addClass("note-row");
                        $noteRow.append(
                            $("<label>")
                                .text(`Note for ${countryName}`)
                                .attr("for", `note-${countryId}`)
                        );
                        $noteRow.append(
                            $("<input>")
                                .attr({
                                    type: "text",
                                    id: `note-${countryId}`,
                                    "data-country-id": countryId
                                })
                                .val(savedSelections.notes[countryId] || "")
                        );
                        $noteContainer.append($noteRow);
                    });
            }

            // Save selections and notes
            $("#saveButton").click(function () {
                savedSelections.selectedItems = $regionDropdown
                    .val() || [];
                savedSelections.notes = {};

                $noteContainer.find("input").each(function () {
                    const countryId = $(this).data("country-id");
                    savedSelections.notes[countryId] = $(this).val();
                });

                alert("Selections and notes saved!");
                console.log(savedSelections);

                // Hide save and show edit
                $("#saveButton").hide();
                $("#editButton").show();

                // Disable dropdown and notes
                $regionDropdown.prop("disabled", true);
                $noteContainer.find("input").prop("disabled", true);
            });

            // Edit selections and notes
            $("#editButton").click(function () {
                // Enable dropdown and notes
                $regionDropdown.prop("disabled", false);
                $noteContainer.find("input").prop("disabled", false);

                // Show save button again
                $("#saveButton").show();
                $("#editButton").hide();
            });

            // Initial load
            populateDropdown();

            // Bind change event to dropdown for notes display
            $regionDropdown.change(function () {
                displayNotes();
            });

            // If saved selections exist, populate them
            if (savedSelections.selectedItems.length > 0) {
                $regionDropdown.val(savedSelections.selectedItems);
                displayNotes();
                $noteContainer.find("input").each(function () {
                    const countryId = $(this).data("country-id");
                    $(this).val(savedSelections.notes[countryId] || "");
                });
            }
        });
    </script>
</body>
</html>


---

How It Works:

1. Dropdown Population:

Uses <optgroup> for grouping countries under their respective regions.

Populates on page load.



2. Note Entry:

Displays a textbox for each selected country.

Textboxes are dynamically added as options are selected.



3. Save Functionality:

Saves selected items and their associated notes in a JavaScript object (savedSelections).

Disables the dropdown and notes fields.



4. Edit Functionality:

Re-enables the dropdown and notes fields for editing.

Restores previously saved selections and notes.





---

This approach ensures full functionality using jQuery while providing a user-friendly interface for multi-select with grouped options and editable notes.

