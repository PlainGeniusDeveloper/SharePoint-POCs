function mergeJSON(defaultJson, specificJson) {
  function deepMerge(defaultObj, specificObj) {
    const result = {};

    // loop over default keys
    for (const key in defaultObj) {
      if (Object.prototype.hasOwnProperty.call(defaultObj, key)) {
        const defaultVal = defaultObj[key];
        const specificVal = specificObj?.[key];

        // agar value object hai (nested) â†’ recursive merge
        if (typeof defaultVal === "object" && defaultVal !== null && !Array.isArray(defaultVal)) {
          result[key] = deepMerge(defaultVal, specificVal || {});
        } else {
          // normal value
          if (specificVal !== undefined && specificVal !== null && specificVal !== "") {
            result[key] = specificVal;
          } else {
            result[key] = defaultVal;
          }
        }
      }
    }

    // loop over specific keys jo default me missing hai
    if (specificObj) {
      for (const key in specificObj) {
        if (!(key in result)) {
          result[key] = specificObj[key];
        }
      }
    }

    return result;
  }

  return deepMerge(defaultJson, specificJson || {});
}
