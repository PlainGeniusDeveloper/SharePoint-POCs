function setValueByPath(jsonObj, path, value) {
    if (!path) return false;

    const keys = path.split('.'); // Split path into keys
    let current = jsonObj;

    for (let i = 0; i < keys.length - 1; i++) {
        let key = keys[i];

        // Special handling for "tabsDetails" since it's an array of objects
        if (key === "tabsDetails" && Array.isArray(current)) {
            let tabName = keys[i + 1]; // Extract "Support" from "tabsDetails.Support"
            let tabObj = current.find(obj => obj.tabName === tabName);

            if (!tabObj) return false; // If tab is missing, do nothing

            current = tabObj; // Move inside the tab object
            i++; // Skip the next key (because we already used it)
            continue;
        }

        // Create missing objects along the path
        if (!current[key] || typeof current[key] !== 'object') {
            current[key] = {};
        }
        
        current = current[key];
    }

    // Set the final value
    current[keys[keys.length - 1]] = value;
    return true;
}

// Example JSON
let json_template_to_be_filled = [
    {
        "tabName": "Restrictions",
        "tabContent": {
            "titleName": "Restrictions",
            "tabAddOnTitleDescription": [],
            "description": ""
        }
    },
    {
        "tabName": "Support",
        "tabContent": {
            "titleName": "Support",
            "description": ""
        }
    }
];

// Path & Value
let jsonPath = "tabsDetails.Support.tabContent.productArea";
let productArea = ["Product 1", "Product 2"];

setValueByPath(json_template_to_be_filled, jsonPath, productArea);

console.log(JSON.stringify(json_template_to_be_filled, null, 2));
