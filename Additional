function mergeTemplates(standard, specific) {
  const missingKeys = [];

  function deepMerge(defaultObj, specificObj, path = "") {
    const result = Array.isArray(defaultObj) ? [] : {};

    const keys = new Set([
      ...Object.keys(defaultObj),
      ...(specificObj && typeof specificObj === "object" ? Object.keys(specificObj) : [])
    ]);

    keys.forEach((key) => {
      const fullPath = path ? `${path}.${key}` : key;
      const defaultVal = defaultObj[key];
      const specificVal = specificObj?.[key];

      if (
        typeof defaultVal === "object" &&
        defaultVal !== null &&
        !Array.isArray(defaultVal)
      ) {
        result[key] = deepMerge(
          defaultVal,
          specificVal && typeof specificVal === "object" ? specificVal : {},
          fullPath
        );
      } else {
        if (specificVal !== undefined && specificVal !== null && specificVal !== "") {
          result[key] = specificVal;
        } else {
          result[key] = defaultVal;
          missingKeys.push(fullPath); // track missing / default-filled keys
        }
      }
    });

    return result;
  }

  const merged = deepMerge(standard, specific);
  return { merged, missingKeys };
}
