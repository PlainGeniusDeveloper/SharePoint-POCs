let editorInstance;

function initCKEditor(selector) {
    return new Promise((resolve, reject) => {
        // If an editor instance already exists, destroy it
        if (editorInstance) {
            editorInstance.destroy()
                .then(() => {
                    createNewEditor(selector, resolve, reject);
                })
                .catch(err => {
                    console.error("Error while destroying editor: ", err);
                    reject(err);
                });
        } else {
            createNewEditor(selector, resolve, reject);
        }
    });
}

function createNewEditor(selector, resolve, reject) {
    ClassicEditor
        .create(document.querySelector(selector), {
            plugins: [Essentials, Paragraph, Bold, Italic, Font],
            toolbar: ['undo', 'redo', '|', 'bold', 'italic', '|', 'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor']
        })
        .then(editor => {
            editorInstance = editor;
            resolve(editorInstance);
        })
        .catch(error => {
            console.error('Error creating editor:', error);
            reject(error);
        });
}
