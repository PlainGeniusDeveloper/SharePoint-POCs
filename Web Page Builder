<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editable Page with Sections</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.ckeditor.com/ckeditor5/39.0.0/classic/ckeditor.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .section {
            margin-bottom: 20px;
            padding: 10px;
            border: 1px solid #ddd;
            position: relative;
        }

        .banner-section img {
            width: 100%;
            height: auto;
            background-color: #f0f0f0;
        }

        .section-controls {
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 10;
        }

        .default-placeholder {
            background-color: #f0f0f0;
            color: #999;
            text-align: center;
            padding: 50px;
            border: 1px dashed #ccc;
        }

        .team-integration-section iframe {
            width: 100%;
            height: 300px;
        }
    </style>
</head>
<body>

<div id="page-content">
    <!-- Banner Section -->
    <div class="section banner-section" data-section-type="banner">
        <div class="section-controls">
            <button class="btn btn-primary btn-sm edit-section">Edit</button>
            <button class="btn btn-danger btn-sm delete-section">Delete</button>
            <button class="btn btn-info btn-sm move-up">↑</button>
            <button class="btn btn-info btn-sm move-down">↓</button>
        </div>
        <img src="https://via.placeholder.com/1200x400?text=Default+Banner+Image" alt="Banner Image">
        <h1>Default Banner Title</h1>
        <h2>Default Banner Subtitle</h2>
        <a href="#" class="btn btn-success order-now-button">Order Now</a>
    </div>

    <!-- Title and Description Sections -->
    <div class="section" data-section-type="content">
        <div class="section-controls">
            <button class="btn btn-primary btn-sm edit-section">Edit</button>
            <button class="btn btn-danger btn-sm delete-section">Delete</button>
            <button class="btn btn-info btn-sm move-up">↑</button>
            <button class="btn btn-info btn-sm move-down">↓</button>
        </div>
        <h1>Title 1</h1>
        <p>Description 1</p>
    </div>
    <div class="section" data-section-type="content">
        <div class="section-controls">
            <button class="btn btn-primary btn-sm edit-section">Edit</button>
            <button class="btn btn-danger btn-sm delete-section">Delete</button>
            <button class="btn btn-info btn-sm move-up">↑</button>
            <button class="btn btn-info btn-sm move-down">↓</button>
        </div>
        <h1>Title 2</h1>
        <p>Description 2</p>
    </div>

    <!-- Team Book Integration Section -->
    <div class="section team-integration-section" data-section-type="team">
        <div class="section-controls">
            <button class="btn btn-primary btn-sm edit-section">Edit</button>
            <button class="btn btn-danger btn-sm delete-section">Delete</button>
            <button class="btn btn-info btn-sm move-up">↑</button>
            <button class="btn btn-info btn-sm move-down">↓</button>
        </div>
        <h1>Team Book</h1>
        <input type="text" id="team-book-id" placeholder="Enter Team Book ID">
        <iframe id="team-book-iframe" src="" style="display: none;"></iframe>
    </div>

    <!-- Add New Section -->
    <button id="add-section" class="btn btn-info">Add New Section</button>
</div>

<!-- Modal for CKEditor -->
<div class="modal fade" id="editorModal" tabindex="-1" aria-labelledby="editorModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editorModalLabel">Edit Content</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <textarea id="editor"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary save-changes">Save changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Script Dependencies -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<script>
// Code starts here

$(document).ready(function () {
    let editorInstance;
    let currentSection;

    function initializeEditor(data) {
        ClassicEditor.create(document.querySelector('#editor'), {
            toolbar: {
                items: [
                    'heading', '|',
                    'bold', 'italic', 'link', '|',
                    'bulletedList', 'numberedList', '|',
                    'insertImage', '|',
                    'undo', 'redo'
                ]
            },
            simpleUpload: {
                uploadUrl: '/upload', // Replace with your upload URL
                withCredentials: true,
                headers: {
                    'X-CSRF-TOKEN': 'CSRF-Token',
                    Authorization: 'Bearer <JSON Web Token>'
                }
            },
            extraPlugins: [MyImagePlugin] // Custom plugin for image URL insertion
        })
        .then(editor => {
            editorInstance = editor;
            editorInstance.setData(data);
        })
        .catch(error => {
            console.error(error);
        });
    }

    function openEditorModal(section) {
        currentSection = section;
        const content = $(section).html();
        initializeEditor(content);
        $('#editorModal').modal('show');
    }

    function saveChanges() {
        const updatedContent = editorInstance.getData();
        if (currentSection) {
            $(currentSection).html(updatedContent);
            editorInstance.destroy();
            $('#editorModal').modal('hide');
        }
    }

    // Edit Section
    $(document).on('click', '.edit-section', function () {
        const section = $(this).closest('.section');
        openEditorModal(section);
    });

    // Save Changes
    $(document).on('click', '.save-changes', saveChanges);

    // Add New Section
    $(document).on('click', '#add-section', function () {
        const newSection = `
            <div class="section" data-section-type="content">
                <div class="section-controls">
                    <button class="btn btn-primary btn-sm edit-section">Edit</button>
                    <button class="btn btn-danger btn-sm delete-section">Delete</button>
                    <button class="btn btn-info btn-sm move-up">↑</button>
                    <button class="btn btn-info btn-sm move-down">↓</button>
                </div>
                <h1>New Title</h1>
                <p>New Description</p>
            </div>`;
        $('#page-content').append(newSection);
    });

    // Delete Section
    $(document).on('click', '.delete-section', function () {
        if (confirm('Are you sure you want to delete this section?')) {
            $(this).closest('.section').remove();
        }
    });

    // Move Section Up
    $(document).on('click', '.move-up', function () {
        const section = $(this).closest('.section');
        section.prev('.section').before(section);
    });

    // Move Section Down
    $(document).on('click', '.move-down', function () {
        const section = $(this).closest('.section');
        section.next('.section').after(section);
    });

    // Update Order Now Button Visibility
    function updateOrderNowButton() {
        $('.order-now-button').each(function () {
            const buttonText = $(this).text().trim();
            const buttonLink = $(this).attr('href').trim();
            if (!buttonText || buttonLink === '#') {
                $(this).hide();
            }
        });
    }

    updateOrderNowButton();

    // Set Placeholder Image
    function setPlaceholderImage(imgElement) {
        const placeholderUrl = "https://via.placeholder.com/1200x400?text=Default+Banner+Image";
        if (!imgElement.attr('src') || imgElement.attr('src') === '') {
            imgElement.attr('src', placeholderUrl);
        }
    }

    setPlaceholderImage($('.banner-section img'));

    // Team Book Integration
    function updateTeamBookIframe() {
        const teamBookId = $('#team-book-id').val();
        const iframe = $('#team-book-iframe');
        if (teamBookId) {
            iframe.attr('src', `https://teambook.com/${teamBookId}`);
            iframe.show();
        } else {
            iframe.hide();
        }
    }

    $(document).on('input', '#team-book-id', updateTeamBookIframe);

    // Image Plugin for CKEditor
    class MyImagePlugin {
        constructor(editor) {
            this.editor = editor;
        }

        init() {
            const { editor } = this;
            const { model, view } = editor;

            editor.ui.componentFactory.add('insertImageFromURL', locale => {
                const view = new ButtonView(locale);

                view.set({
                    label: 'Insert image from URL',
                    icon: '<svg>...</svg>', // Add your SVG icon here
                    tooltip: true
                });

                view.on('execute', () => {
                    const url = prompt('Enter image URL');
                    if (url) {
                        editor.model.change(writer => {
                            const imageElement = writer.createElement('imageBlock', { src: url });
                            editor.model.insertContent(imageElement);
                        });
                    }
                });

                return view;
            });
        }
    }

    ClassicEditor
        .create(document.querySelector('#editor'), {
            plugins: [MyImagePlugin]
        })
        .catch(error => {
            console.error(error);
        });
});
</script>

</body>
</html>
